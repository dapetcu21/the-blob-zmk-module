#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/bt.h>

#define L_BASE 0
#define L_FN 1
#define L_SYS 2

/ {
    macros {
        bt_out: bt_out {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&out OUT_BLE>
                , <&macro_param_1to2>
                , <&bt BT_SEL MACRO_PLACEHOLDER>
                ;
        };

        bt_disc: bt_disc {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings
                = <&out OUT_BLE>
                , <&macro_param_1to2>
                , <&bt BT_DISC MACRO_PLACEHOLDER>
                ;
        };
    };

    behaviors {
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };

        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };

        td_fn: tap_dance_fn {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            display-name = "Layers Tap-Dance";
            tapping-term-ms = <200>;
            bindings = <&mo L_FN>, <&tog_on L_FN>, <&tog_on L_SYS>;
        };

        bt_0: ble_binding_0 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&bt_out 0>, <&bt_disc 0>;
        };

        bt_1: ble_binding_1 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&bt_out 1>, <&bt_disc 1>;
        };

        bt_2: ble_binding_2 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&bt_out 2>, <&bt_disc 2>;
        };

        bt_3: ble_binding_3 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&bt_out 3>, <&bt_disc 3>;
        };

        bt_4: ble_binding_4 {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
            bindings = <&bt_out 4>, <&bt_disc 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "Base";
            bindings = <
&kp GRAVE  &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                               &kp N6    &kp N7   &kp N8    &kp N9  &kp N0   &kp MINUS
&kp TAB    &kp Q  &kp W  &kp E    &kp R    &kp T  &td_fn          &kp BACKSLASH &kp Y     &kp U    &kp I     &kp O   &kp P    &kp EQUAL
&kp ESC    &kp A  &kp S  &kp D    &kp F    &kp G  &kp LBKT        &kp RBKT      &kp H     &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHIFT &kp Z  &kp X  &kp C    &kp V    &kp B                                &kp N     &kp M    &kp COMMA &kp DOT &kp FSLH &kp RSHIFT
                                  &kp LGUI &kp LCTRL &kp LSHIFT   &kp RSHIFT    &kp SPACE &td_fn
                                           &kp LALT  &kp BSPC     &kp RETURN    &kp RALT
            >;
        };

        fn_layer {
            display-name = "Fn";
            bindings = <
&trans    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5                                    &kp F6          &kp F7          &kp F8        &kp F9           &kp F10   &kp F11
&trans    &kp INS   &trans    &trans    &trans    &trans    &trans         &trans           &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &kp UP    &kp F12
&trans    &kp HOME  &kp PG_UP &kp PG_DN &kp END   &trans    &trans         &trans           &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &kp DOWN  &kp RIGHT
&trans    &trans    &trans    &trans    &trans    &trans                                    &trans          &trans          &trans        &kp LEFT         &trans    &trans
                                        &trans    &trans    &trans         &trans           &mkp MB1        &tog_off L_FN
                                                  &trans    &kp DEL        &trans           &mkp MB2
            >;
        };

        system {
            display-name = "System";
            bindings = <
&bt BT_CLR    &trans          &trans          &trans            &trans    &trans                                  &trans    &trans    &trans    &trans    &trans    &trans
&trans        &trans          &trans          &trans            &trans    &trans    &bootloader    &bootloader    &trans    &trans    &trans    &trans    &trans    &trans
&trans        &out OUT_USB    &out OUT_BLE    &studio_unlock    &trans    &trans    &sys_reset     &sys_reset     &trans    &trans    &trans    &trans    &trans    &trans
&trans        &bt_0           &bt_1           &bt_2             &bt_3     &bt_4                                   &trans    &trans    &trans    &trans    &trans    &trans
                                                                &trans    &trans    &trans         &trans         &trans    &tog_off L_SYS
                                                                          &trans    &trans         &trans         &trans
            >;
        };

        extra1 {
            display-name = "Extra 1";
            bindings = <
&trans    &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans     &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans    &trans     &trans    &trans    &trans    &trans    &trans    &trans    &trans
&trans    &trans    &trans    &trans    &trans    &trans                         &trans    &trans    &trans    &trans    &trans    &trans
                                        &trans    &trans    &trans     &trans    &trans    &trans
                                                  &trans    &trans     &trans    &trans
            >;
        };
    };
 };
